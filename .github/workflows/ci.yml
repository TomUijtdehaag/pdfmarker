name: CI
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]
        poetry-version: ["1.2.2", 1.8.2]
        os: [ubuntu-22.04, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install poetry
        uses: abatilo/actions-poetry@v2
      - uses: actions/cache@v4
        name: Define a cache for the virtual environment based on the dependencies lock file
        with:
          path: ./.venv
          key: venv-${{ hashFiles('poetry.lock') }}
      - name: Install the project dependencies
        run: poetry install --with dev
      # testing
      - name: Run the automated tests
        run: poetry run python -m pytest -v --cov=./ --cov-report=xml
      # - name: Upload coverage to Codecov
      #   uses: codecov/codecov-action@v1
      # code quality
      - name: Run ruff
        run: poetry run ruff check
      - name: Run bandit
        run: poetry run bandit .
      # - name: Run safety
      #   run: poetry run safety check